# This workflow is triggered by a push to the `main` branch
# which it checks out, runs cavern to process the svx files,
# and the pushes the results to the `build` branch.

name: svx-to-3d
run-name: Process SVX to 3D

# Run on pushed to `main` branch
on:
  push:
    branches:
      - main

jobs:
  checkout-and-process:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare for GH Pages build
        run: |

          # Loop through all .svx files in the Survex/ directory
          latest_commit_svx=""
          git ls-tree -r --name-only origin/main Survex/ | grep "Survex/.*\.svx$" | while read -r f; do
            commited_at=$(git log origin/main -1 --format=%ct -- $f)
            if [ -z "$latest_commit_svx" ] || [ "$commited_at" -gt "$latest_commit_svx" ]; then
              latest_commit_svx="$commited_at"
            fi
          done
          echo "The latest commit of an .svx file is $latest_commit_svx"
          echo "The latest commit of pell.3d is $latest_commit_build"

          # Rebuild survey if needed
          latest_commit_build=$(git log origin/build -1 --format=%ct -- docs/surveys/pell.3d)
          if [ -z "$latest_commit_svx" ] || [ "$latest_commit_svx" -gt "$latest_commit_build" ]; then
            echo "The latest committed datetime of a .svx file is newer than the latest commit datetime of docs/surveys/pell.3d"
            rm -rf docs/surveys
            sudo apt-get install -y survex
            cavern Survex/pell.svx
            rm pell.err
            install -D pell.3d docs/surveys/pell.3d
            rm pell.3d
          else
            echo "The latest committed datetime of a .svx file is not newer than the latest commit datetime of docs/surveys/pell.3d"
          fi

          # Get CaveView.js builds
          local=$(git show origin/build:docs/CaveView/js/CaveView2.js | gawk -F "'" '/VERSION =/{print $2}' || 0)
          remote=$(curl -s https://api.github.com/repos/aardgoose/CaveView.js/releases/latest | jq -r '.name')

          # Update CaveView.js if needed
          if [ -z "$local" ] || [ "$local" != "$remote" ]; then
            echo "Updating CaveView from $local to $remote"
            rm -rf docs/CaveView
            wget https://github.com/aardgoose/CaveView.js/releases/latest/download/CaveView.zip -O docs/CaveView.zip
            unzip docs/CaveView.zip -d docs/
            rm docs/CaveView.zip
            changes=true
          else
            echo "Local CaveView version $local is up to date"
          fi

      - name: Push changes
        run: |
          echo "Updating build branch"
          git config user.name aricooperdavis
          git config user.email aricooperdavis@user.noreply.github.com
          git add .
          git commit -m 'Automated build of ${{ github.sha }}' || echo "No changes to commit"
          git push --force -u origin main:build || echo "No changes to push"
